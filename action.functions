function validate_accesskey () {
    [[ ${#1} -gt 0 ]] && local github_workspace="${1}" || return 1 ;
    [[ ${#2} -gt 0 ]] && {
        local private_sshkey="${2}" ;
        ## file ${private_sshkey} ;
      } || {return 1} ;
    ## Initializing AWS Default Profile
    [[ ${#aws_default_profile} -eq 0 ]] && \
      aws_default_profile="$(
          echo -e "${AWS_DEFAULT_PROFILE}" | sed -e 's|"||g'
        )" ;
    ## Initializing AWS Default Region
    [[ ${#aws_default_region} -eq 0 ]] && \
      aws_default_region="${AWS_DEFAULT_REGION}" ;
    ## Public SSH-Key file:
    public_sshkey="${private_sshkey/.pem/}.pub" ;
    ## Initializing Public SSH KeyPair
    [[ ! -e ${public_sshkey} ]] && cat /dev/null > ${public_sshkey} ;
    echo -e "\nGenerating SSH Public-Key ..." ;
    ssh-keygen -y -f ${private_sshkey} > ${public_sshkey} ;
    chmod 0644 ${public_sshkey} ;
    ls -al ${public_sshkey} ; echo -e ;
    cat ${public_sshkey} ; echo -e ;
    tree -a ${github_workspace}/.ssh 2>/dev/null ;
    egrep ' RSA ' ${private_sshkey} 2>&1>/dev/null ;
    result=$? ;
    if [[ ${result} -eq 0 ]]; then
            private_keypar_type='rsa-pem';
      else  private_keypar_type='openssh'
    fi ;
    echo -e "\nPrivate Key Type: ${private_keypar_type}" ;
    ## Reference -> https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/verify-keys.html
    if [[ ${private_keypar_type} == 'rsa-pem' ]]; then
            ## Processing AWS Exported Private Key Pair (RSA PEM)
            local_fingerprint="$(
                openssl pkcs8 -in ${private_sshkey} \
                              -inform PEM -outform DER -topk8 -nocrypt \
                | openssl sha1 -c \
                | awk '{print $2}'
              )" ;
      else  ## Processing AWS Imported Public Key Pair
            local_fingerprint="$(
                ssh-keygen -ef ${private_sshkey} -m PEM \
                | openssl rsa -RSAPublicKey_in -outform DER \
                | openssl md5 -c \
                | awk '{print $2}'
              )" ;
    fi ;
    echo -e "Fetching AWS EC2 Key-Pair Fingerprint ... ${local_fingerprint}\n" ;
    ## echo -e "\nListing AWS Default-Config file: ..." ;
    export AWS_CONFIG_FILE="${github_workspace}/.aws/config" ;
    ## cat ${AWS_CONFIG_FILE} ;
    ## echo -e "\nListing AWS Credentials file: ..." ;
    export AWS_SHARED_CREDENTIALS_FILE="${github_workspace}/.aws/credentials" ;
    ## cat ${AWS_SHARED_CREDENTIALS_FILE} ;
    ## Fetching Keypair Fingerprint:
    echo -e "aws --profile ${aws_default_profile} \ " ;
    echo -e "    --region ${aws_default_region} \ " ;
    echo -e "    ec2 describe-key-pairs \ " ;
    echo -e "    --key-name ${PRIVATE_KEYPAIR_NAME}" ;
    ## Exporting AWS environment variables:
    describe_keypairs="$(
        aws --profile ${aws_default_profile} \
            --region ${aws_default_region} \
            ec2 describe-key-pairs \
            --key-name ${PRIVATE_KEYPAIR_NAME}
      )" ;
    echo -e "${describe_keypairs}" | jq '.' ;
    remote_fingerprint="$(
        echo -e "${describe_keypairs}" \
        | jq '.KeyPairs[]|.KeyFingerprint' --raw-output
      )" ;
    if [[ ${local_fingerprint} != ${remote_fingerprint} ]]; then
      echo -e "\nWarning: Private/Public SSH-Key does not match! \n" ;
      exit 3 ;
    fi ;
    echo -e "\nCompleted validating access-key! " ;
    return 0 ;
  };
